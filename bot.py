import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler

TOKEN = '8180948994:AAHaZX-U1WPE2gtZ2aPWw8Ca_isHMSqif9I'
ADMIN_ID = 6458164021

logging.basicConfig(level=logging.INFO)
user_submissions = {}

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –ï—Å–ª–∏ —Ç—ã –ø–æ–ø–∞–ª –≤ —ç—Ç–æ–≥–æ –±–æ—Ç–∞, –∑–Ω–∞—á–∏—Ç —Ç—ã —Ö–æ—á–µ—à—å –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ —Ñ–æ—Ç–æ –≤ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ ‚Äî –î–∏–∑–∞–π–Ω–∏–∫'–∞.\n\n"
        "üì∏ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ 3 –§–û–¢–û (—Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã), –∏ @razesigm –≤–æ–∑–º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç –∏—Ö –≤ –±–æ—Ç–∞. –ü–æ—Å–ª–µ –∂–¥–∏ –æ—Ç–≤–µ—Ç–∞."
    )

def handle_photo(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    photo = update.message.photo[-1].file_id

    if user_id not in user_submissions:
        user_submissions[user_id] = []

    user_submissions[user_id].append(photo)

    if len(user_submissions[user_id]) == 3:
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—ã", callback_data=f"approve_{user_id}")],
            [InlineKeyboardButton("‚ùå –ù–µ –æ–¥–æ–±—Ä–∏—Ç—å —Ä–∞–±–æ—Ç—ã", callback_data=f"reject_{user_id}")]
        ])
        media_group = [InputMediaPhoto(file_id) for file_id in user_submissions[user_id]]

        context.bot.send_message(chat_id=ADMIN_ID, text=f"üë§ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{update.message.from_user.username or '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'}")
        context.bot.send_media_group(chat_id=ADMIN_ID, media=media_group)
        context.bot.send_message(chat_id=ADMIN_ID, text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

        update.message.reply_text("–°–ø–∞—Å–∏–±–æ! –¢–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ. –ñ–¥–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç @razesigm ‚úâÔ∏è")
    elif len(user_submissions[user_id]) < 3:
        update.message.reply_text(f"–§–æ—Ç–æ {len(user_submissions[user_id])}/3 –ø—Ä–∏–Ω—è—Ç–æ. –û—Ç–ø—Ä–∞–≤—å –µ—â—ë {3 - len(user_submissions[user_id])}.")
    else:
        update.message.reply_text("–¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª 3 —Ñ–æ—Ç–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Å—å –æ—Ç–≤–µ—Ç–∞.")

def handle_callback(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data
    if data.startswith("approve_"):
        user_id = int(data.split("_")[1])
        context.bot.send_message(chat_id=user_id, text="üéâ –¢–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –æ–¥–æ–±—Ä–µ–Ω—ã, —Å–ø–∞—Å–∏–±–æ! üí´")
        query.edit_message_text("‚úÖ –†–∞–±–æ—Ç—ã –æ–¥–æ–±—Ä–µ–Ω—ã.")
    elif data.startswith("reject_"):
        user_id = int(data.split("_")[1])
        context.bot.send_message(chat_id=user_id, text="‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –Ω–µ –±—ã–ª–∏ –æ–¥–æ–±—Ä–µ–Ω—ã üòî")
        query.edit_message_text("‚ùå –†–∞–±–æ—Ç—ã –Ω–µ –æ–¥–æ–±—Ä–µ–Ω—ã.")
    if user_id in user_submissions:
        del user_submissions[user_id]

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.photo, handle_photo))
    dp.add_handler(CallbackQueryHandler(handle_callback))
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
