import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, InputMediaPhoto
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackContext, CallbackQueryHandler

TOKEN = '8180948994:AAHaZX-U1WPE2gtZ2aPWw8Ca_isHMSqif9I'
ADMIN_ID = 5140455624

logging.basicConfig(level=logging.INFO)

submission_enabled = True
user_submissions = {}
submitted_in_cycle = set()

def start(update: Update, context: CallbackContext):
    update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å 3 —Å–≤–æ–∏ —Ä–∞–±–æ—Ç—ã (—Ñ–æ—Ç–æ), —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∏—Ö –¥–ª—è –î–ò–ó–ê–ô–ù–ò–ö'–∞.\n"
        "‚ùó –°–µ–π—á–∞—Å —Å—Ç–∞—Ç—É—Å –ø–æ–¥–∞—á–∏: " + ("‚úÖ –æ—Ç–∫—Ä—ã—Ç" if submission_enabled else "üö´ –∑–∞–∫—Ä—ã—Ç")
    )

def enable_submissions(update: Update, context: CallbackContext):
    global submission_enabled, submitted_in_cycle, user_submissions
    if update.effective_user.id != ADMIN_ID:
        return
    submission_enabled = True
    submitted_in_cycle.clear()
    user_submissions.clear()
    update.message.reply_text("‚úÖ –ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫ —Å–Ω–æ–≤–∞ –æ—Ç–∫—Ä—ã—Ç!")

def disable_submissions(update: Update, context: CallbackContext):
    global submission_enabled
    if update.effective_user.id != ADMIN_ID:
        return
    submission_enabled = False
    update.message.reply_text("üö´ –ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫ –∑–∞–∫—Ä—ã—Ç. –ù–æ–≤—ã–µ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ–ª—å–∑—è.")

def handle_photo(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    username = update.message.from_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"

    if not submission_enabled:
        update.message.reply_text("‚ùå –ü—Ä–∏—ë–º –∑–∞—è–≤–æ–∫ —Å–µ–π—á–∞—Å –∑–∞–∫—Ä—ã—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.")
        return

    if user_id in submitted_in_cycle:
        update.message.reply_text("‚è≥ –¢—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª 3 —Ä–∞–±–æ—Ç—ã –≤ —ç—Ç–æ–º –ù–ê–ë–û–†–ï. –ñ–¥–∏ —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–∞–±–æ—Ä–∞.")
        return

    photo = update.message.photo[-1].file_id
    if user_id not in user_submissions:
        user_submissions[user_id] = []

    user_submissions[user_id].append(photo)

    if len(user_submissions[user_id]) == 3:
        media_group = [InputMediaPhoto(file_id) for file_id in user_submissions[user_id]]
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", callback_data=f"approve_{user_id}")],
            [InlineKeyboardButton("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data=f"reject_{user_id}")]
        ])

        context.bot.send_message(chat_id=ADMIN_ID, text=f"üë§ –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç @{username}")
        context.bot.send_media_group(chat_id=ADMIN_ID, media=media_group)
        context.bot.send_message(chat_id=ADMIN_ID, text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=keyboard)

        update.message.reply_text("‚úÖ –†–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –ñ–¥–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç @razesigm.")
        submitted_in_cycle.add(user_id)
    else:
        update.message.reply_text(f"–§–æ—Ç–æ {len(user_submissions[user_id])}/3 –ø—Ä–∏–Ω—è—Ç–æ. –û—Å—Ç–∞–ª–æ—Å—å {3 - len(user_submissions[user_id])}.")

def handle_callback(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()
    data = query.data

    if data.startswith("approve_") or data.startswith("reject_"):
        user_id = int(data.split("_")[1])
        approved = data.startswith("approve")

        msg = "üéâ –¢–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –æ–¥–æ–±—Ä–µ–Ω—ã!" if approved else "‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç–≤–æ–∏ —Ä–∞–±–æ—Ç—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω—ã."
        result = "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ." if approved else "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ."

        context.bot.send_message(chat_id=user_id, text=msg)
        query.edit_message_text(result)

        user_submissions.pop(user_id, None)

def main():
    updater = Updater(TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("open", enable_submissions))
    dp.add_handler(CommandHandler("close", disable_submissions))
    dp.add_handler(MessageHandler(Filters.photo, handle_photo))
    dp.add_handler(CallbackQueryHandler(handle_callback))

    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()


